var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [QuantumOperatorAlgebra]","category":"page"},{"location":"reference/#QuantumOperatorAlgebra.OpSum","page":"Reference","title":"QuantumOperatorAlgebra.OpSum","text":"An OpSum represents a sum of operator terms.\n\nOften it is used to create matrix product operator (MPO) approximation of the sum of the terms in the OpSum oject. Each term is a product of local operators specified by names such as \"Sz\" or \"N\", times an optional coefficient which can be real or complex.\n\nWhich local operator names are available is determined by the function op associated with the TagType defined by special Index tags, such as \"S=1/2\", \"S=1\", \"Fermion\", and \"Electron\".\n\n\n\n\n\n","category":"type"},{"location":"","page":"Home","title":"Home","text":"EditURL = \"../../examples/README.jl\"","category":"page"},{"location":"#QuantumOperatorAlgebra.jl","page":"Home","title":"QuantumOperatorAlgebra.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Stable) (Image: Dev) (Image: Build Status) (Image: Coverage) (Image: Code Style: Blue) (Image: Aqua)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Quantum operator algebra system. This is mostly meant to be used as a backend in ITensorMPS.jl and ITensorNetworks.jl for lazily representing operator expressions that will be turned into quantum circuits and tensor networks.","category":"page"},{"location":"","page":"Home","title":"Home","text":"See also:","category":"page"},{"location":"","page":"Home","title":"Home","text":"ITensorQuantumOperatorDefinitions.jl for operator definitions","category":"page"},{"location":"","page":"Home","title":"Home","text":"compatible with this system.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Yao.jl\nQuac.jl\nQuantumAlgebra.jl\nQuantumCumulants.jl\nQuantumSymbolics.jl\nQuantumOptics.jl, QuantumInterface.jl\nQuantumLattices.QuantumOperators\nQuantumToolbox.jl\nQaintessent.jl\nSnowflurry.jl\nQuantumCircuitOpt.jl\nVQC.jl","category":"page"},{"location":"#Installation-instructions","page":"Home","title":"Installation instructions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package resides in the ITensor/ITensorRegistry local registry. In order to install, simply add that registry through your package manager. This step is only required once.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg: Pkg\n\njulia> Pkg.Registry.add(url=\"https://github.com/ITensor/ITensorRegistry\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"or:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> Pkg.Registry.add(url=\"git@github.com:ITensor/ITensorRegistry.git\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"if you want to use SSH credentials, which can make it so you don't have to enter your Github ursername and password when registering packages.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, the package can be added as usual through the package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> Pkg.add(\"QuantumOperatorAlgebra\")","category":"page"},{"location":"#Examples","page":"Home","title":"Examples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using QuantumOperatorAlgebra: Op, Prod, Scaled, Sum, coefficient, sites, terms, which_op\nusing Test: @test\n\no1 = Op(\"X\", 1)\no2 = Op(\"Y\", 2)\n\n@test which_op(o1) == \"X\"\n@test sites(o1) == (1,)\n\no = o1 + o2\n\n@test o isa Sum{Op}\n@test terms(o)[1] == o1\n@test terms(o)[2] == o2\n\no *= 2\n\n@test o isa Sum{Scaled{Int,Op}}\n@test terms(o)[1] == 2 * o1\n@test terms(o)[2] == 2 * o2\n@test coefficient(terms(o)[1]) == 2\n@test coefficient(terms(o)[2]) == 2\n\no3 = Op(\"Z\", 3)\n\no *= o3\n\n@test o isa Sum{Scaled{Int,Prod{Op}}}\n@test terms(o)[1] == 2 * o1 * o3\n@test terms(o)[2] == 2 * o2 * o3\n@test coefficient(terms(o)[1]) == 2\n@test coefficient(terms(o)[2]) == 2","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"This page was generated using Literate.jl.","category":"page"}]
}
